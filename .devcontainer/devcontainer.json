// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.233.0/containers/ubuntu
{
	"name": "Ubuntu",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Ubuntu version: jammy / ubuntu-22.04, focal / ubuntu-20.04, bionic /ubuntu-18.04
		// Use ubuntu-22.04 or ubuntu-18.04 on local arm64/Apple Silicon.
		"args": { "VARIANT": "jammy" }
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"files.associations": {
			"*.fdf": "edk2_fdf",
			"*.dsc": "edk2_dsc",
			"*.dec": "edk2_dec",
			"*.inf": "edk2_inf",
			"*.aslc": "c",
			"*.nasmb": "asm",
			"*.asm16": "asm"
		},
		"files.exclude": {
			"**/.git": true,
			"**/.svn": true,
			"**/.hg": true,
			"**/CVS": true,
			"**/.DS_Store": true,
			"**/Autogen.c": true,
			"Build/**": true,
		},
		"editor.renderWhitespace": "all",
		"files.trimTrailingWhitespace": true,
		"editor.tabSize": 2,
		"editor.rulers": [
			80,
			120
		],
    "edk2-vscode.build.compiler": "GCC5",
    "edk2-vscode.build.project": "MdeModulePkgX64"
	},


	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker",
		"walonli.edk2-vscode",
		"ms-vscode.cpptools-extension-pack",
		"Thog.vscode-asl",
		"13xforever.language-x86-64-assembly",
		"ms-python.python",
		"eamodio.gitlens",
		"donjayamanne.githistory",
		"yzhang.markdown-all-in-one",
		"streetsidesoftware.code-spell-checker",
		"VisualStudioExptTeam.vscodeintellicode"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": [
		"git submodule update --init",
		"&&",
		"make -C BaseTools"
	],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"git": "os-provided",
		"github-cli": "latest",
		"fish": "latest",
		"python": "os-provided"
	}
}
